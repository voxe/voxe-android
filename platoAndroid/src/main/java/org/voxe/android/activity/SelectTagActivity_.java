//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package org.voxe.android.activity;

import java.io.Serializable;
import java.util.HashSet;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;
import com.actionbarsherlock.view.MenuItem;
import com.googlecode.androidannotations.api.SdkVersionHelper;
import org.voxe.android.R.layout;
import org.voxe.android.VoxeApplication;
import org.voxe.android.adapter.SelectTagAdapter_;
import org.voxe.android.common.Analytics_;
import org.voxe.android.model.Tag;

public final class SelectTagActivity_
    extends SelectTagActivity
{


    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        setContentView(layout.select_tag_list);
    }

    private void init_(Bundle savedInstanceState) {
        injectExtras_();
        application = ((VoxeApplication) this.getApplication());
        tagAdapter = SelectTagAdapter_.getInstance_(this);
        analytics = Analytics_.getInstance_(this);
    }

    private void afterSetContentView_() {
        list = ((ListView) findViewById(android.R.id.list));
        {
            AdapterView<?> view = ((AdapterView<?> ) findViewById(android.R.id.list));
            if (view!= null) {
                view.setOnItemClickListener(new OnItemClickListener() {


                    @Override
                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                        listItemClicked(((Tag) parent.getAdapter().getItem(position)));
                    }

                }
                );
            }
        }
        ((SelectTagAdapter_) tagAdapter).afterSetContentView_();
        ((Analytics_) analytics).afterSetContentView_();
        initLayout();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        afterSetContentView_();
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    public static SelectTagActivity_.IntentBuilder_ intent(Context context) {
        return new SelectTagActivity_.IntentBuilder_(context);
    }

    @SuppressWarnings("unchecked")
    private<T >T cast_(Object object) {
        return ((T) object);
    }

    private void injectExtras_() {
        Intent intent_ = getIntent();
        Bundle extras_ = intent_.getExtras();
        if (extras_!= null) {
            if (extras_.containsKey("selectedCandidateIds")) {
                try {
                    selectedCandidateIds = cast_(extras_.get("selectedCandidateIds"));
                } catch (ClassCastException e) {
                    Log.e("SelectTagActivity_", "Could not cast extra to expected type, the field is left to its default value", e);
                }
            }
            if (extras_.containsKey("electionIndex")) {
                try {
                    electionIndex = ((Integer) extras_.get("electionIndex"));
                } catch (ClassCastException e) {
                    Log.e("SelectTagActivity_", "Could not cast extra to expected type, the field is left to its default value", e);
                }
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        boolean handled = super.onOptionsItemSelected(item);
        if (handled) {
            return true;
        }
        switch (item.getItemId()) {
            case android.R.id.home:
                homeSelected();
                return true;
            default:
                return false;
        }
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, SelectTagActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public SelectTagActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public SelectTagActivity_.IntentBuilder_ selectedCandidateIds(HashSet<String> selectedCandidateIds) {
            intent_.putExtra("selectedCandidateIds", ((Serializable) selectedCandidateIds));
            return this;
        }

        public SelectTagActivity_.IntentBuilder_ electionIndex(int electionIndex) {
            intent_.putExtra("electionIndex", electionIndex);
            return this;
        }

    }

}
